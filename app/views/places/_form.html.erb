<style>
  #map-form {
    height: 400px;
  }
</style>

<%= form_for place, html: {class: "form-group form-cadaster-place"} do |f| %>
  <% if place.errors.any? %>
    <div id="error_explanation">
      <ul>
      <% place.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field col-md-12">
    <%= f.label :name %>
    <%= f.text_field :name, class: 'form-control' %>
  </div>
  <div class="field col-md-12">
    <%= f.label :initials %>
    <%= f.text_field :initials, class: 'form-control' %>
  </div>
  <div class="col-md-12">
    <div class="col-md-10">
      <label for="address_text">Endere√ßo:</label> <span class="helper-form-text"> Ex: IFRN natal, Midway natal </span> <br>
      <input type="text" id="address_text" name="address_text" class="form-control" />
    </div>
    <div class="col-md-2">
      <input type="button" id="address_button" name="address_button" value="Mostrar" class="form-control btn btn-warning" />
    </div>

    <div id="map-form" class="col-md-12"> </div>
  </div>

  <div class="field col-md-12">
    <%= f.label :latitude %>
    <%= f.text_field :latitude, class: 'form-control', id: 'latitude_text' %>
  </div>
  <div class="field col-md-12">
    <%= f.label :longitude %>
    <%= f.text_field :longitude, class: 'form-control', id: 'longitude_text' %>
  </div>
  <div class="field col-md-12">
    <%= f.label :street %>
    <%= f.text_field :street, class: 'form-control' %>
  </div>
  <div class="field col-md-12">
    <%= f.label :number %>
    <%= f.text_field :number, class: 'form-control' %>
  </div>
  <div class="field col-md-12">
    <%= f.label :neighborhood %>
    <%= f.text_field :neighborhood, class: 'form-control' %>
  </div>
  <div class="field col-md-12">
    <%= f.label :city %>
    <%= f.text_field :city, class: 'form-control' %>
  </div>
  <div class="field col-md-12">
    <%= f.label :state %>
    <%= f.text_field :state, class: 'form-control' %>
  </div>
  <div class="actions col-md-12">
    <%= f.submit 'Criar', class: 'btn btn-default' %>
  </div>
<% end %>
<script type="text/javascript">
  var geocoder;
  var map;
  var marker;

  function initMap() {
    var latlng = new google.maps.LatLng(-18.8800397, -47.0587899);
    var options = {
        zoom: 11,
        center: latlng,
        mapTypeId: google.maps.MapTypeId.ROADMAP
        // scrollwheel: false
    };

    map = new google.maps.Map(document.getElementById("map-form"), options);
    geocoder = new google.maps.Geocoder();
    marker = new google.maps.Marker({
        map: map,
        draggable: true,
    });

    marker.setPosition(latlng);
  }

  function split_by(value, split_text) {
    return value.split(split_text);
  }

  function fill_fields_locaton(){
    var fields =  split_by($("#address_text").val(), ',');
    var fields2 = split_by(fields[1], '-');
    var fields3 = split_by(fields[2], '-');
    console.log(fields);
    console.log(fields2);
    console.log(fields3);

    $("[name='place[street]']").val(fields[0]);
    $("[name='place[number]']").val(fields2[0]);
    $("[name='place[neighborhood]']").val(fields2[1]);
    $("[name='place[city]']").val(fields3[0]);
    $("[name='place[state]']").val(fields3[1]);
  }

  $(document).ready(function () {
    initMap();
    function loadMap(endereco) {
        geocoder.geocode({ 'address': endereco + ', Brasil', 'region': 'BR' }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                if (results[0]) {
                    var latitude = results[0].geometry.location.lat();
                    var longitude = results[0].geometry.location.lng();

                    $('#address_text').val(results[0].formatted_address);
                    $('#latitude_text').val(latitude);
                    $('#longitude_text').val(longitude);

                    var location = new google.maps.LatLng(latitude, longitude);
                    marker.setPosition(location);
                    map.setCenter(location);
                    map.setZoom(16);
                }
            }
        });
    }
    $("#address_button").click(function() {
      if($(this).val() != "")
        loadMap($("#address_text").val());
    });

    $("#address_text").blur(function() {
      if($(this).val() != "") {
        loadMap($(this).val());
        fill_fields_locaton();
      }
    });

    $("#address_text").autocomplete({
        source: function (request, response) {
            geocoder.geocode({ 'address': request.term + ', Brasil', 'region': 'BR' }, function (results, status) {
                response($.map(results, function (item) {
                    return {
                        label: item.formatted_address,
                        value: item.formatted_address,
                        latitude: item.geometry.location.lat(),
                        longitude: item.geometry.location.lng()
                    }
                }));
            })
        },
        select: function (event, ui) {
            // $("#latitude_text").val(ui.item.latitude);
            // $("#longitude_text").val(ui.item.longitude);
            var location = new google.maps.LatLng(ui.item.latitude, ui.item.longitude);
            marker.setPosition(location);
            map.setCenter(location);
            map.setZoom(16);
        }
    });
  });
</script>
<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?key=AIzaSyD0dmqGpAYos-EgNU5hgV9vFHQVoM1zyRM&amp"></script>
