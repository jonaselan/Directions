<div id="right-panel">
  <div id="output"></div>
</div>
<div id="map"></div>

<script>
  function initMap() {
    var bounds = new google.maps.LatLngBounds;
    var markersArray = [];

    var map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: -5.748535, lng: -35.357119},
      zoom: 10
    });
    var geocoder = new google.maps.Geocoder;

    var service = new google.maps.DistanceMatrixService;
    service.getDistanceMatrix({
      origins: hashJS(<%= @places %>, 'lat_lng'),
      destinations: hashJS(<%= @places %>, 'lat_lng'),
      travelMode: 'DRIVING',
      unitSystem: google.maps.UnitSystem.METRIC,
      avoidHighways: false,
      avoidTolls: false
    }, function(response, status) {
      if (status !== 'OK') {
        alert('Error was: ' + status);
      } else {
        var originList = hashJS(<%=@initials%>, 'address');
        // var destinationList = response.destinationAddresses;
        var outputDiv = document.getElementById('output');
        outputDiv.innerHTML = '';
        deleteMarkers(markersArray);

        var showGeocodedAddressOnMap = function() {
          return function(results, status) {
            if (status === 'OK') {
              map.fitBounds(bounds.extend(results[0].geometry.location));
              markersArray.push(new google.maps.Marker({
                map: map,
                position: results[0].geometry.location
              }));
            } else {
              alert('Geocode was not successful due to: ' + status);
            }
          };
        };

        for (var i = 0; i < originList.length; i++) {
          var results = response.rows[i].elements;
          geocoder.geocode({'address': originList[i]}, showGeocodedAddressOnMap());

          for (var j = 0; j < results.length; j++) {
            outputDiv.innerHTML += originList[i] + ' para ' + originList[j] + ': ' + results[j].duration.text + ' Ã  ' + results[j].distance.text  + '<br>';
          }
            outputDiv.innerHTML += '<br>';
        }
      }
    });
  }
  function hashJS(array, type) {
    result = []

    for(var i=0; i < array.length; ++i){
      if (type == 'lat_lng')
        result.push({ lat: array[i][0], lng: array[i][1] })
      else
        result.push(array[i])
    }

    return result
  }

  function deleteMarkers(markersArray) {
    for (var i = 0; i < markersArray.length; i++) {
      markersArray[i].setMap(null);
    }
    markersArray = [];
  }
</script>

<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAVz4E_4pKqtMrerILua81D7zGYS26Iod8&callback=initMap"></script>
